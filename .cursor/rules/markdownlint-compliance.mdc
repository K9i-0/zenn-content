---
description: 
globs: *.md,*.mdc
alwaysApply: false
---
# Markdownlint準拠ルール

このルールはリポジトリ内のすべてのMarkdownファイルを[markdownlint](mdc:https:/marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint)に準拠させるために常に適用されます。

## 基本原則

### 1. 見出し（Headings）ルール
- **MD001**: 見出しレベルは段階的に増加（H1→H2→H3の順番）
- **MD003**: 見出しスタイルは統一（ATX形式 `#` を使用）
- **MD018**: 見出しハッシュ記号の後にスペースを入れる
- **MD019**: 見出しハッシュ記号の後の複数スペースは避ける
- **MD022**: 見出しの前後に空行を入れる
- **MD023**: 見出しは行の最初から始める
- **MD024**: 同じ内容の見出しを複数使わない
- **MD025**: ドキュメント内にH1見出しは1つだけ
- **MD026**: 見出しの末尾に句読点を付けない

### 2. リスト（Lists）ルール
- **MD004**: リストスタイルを統一（`-` を使用）
- **MD005**: 同じレベルのリスト項目のインデントを揃える
- **MD007**: リストのインデントは2スペース
- **MD029**: 番号付きリストの番号は連続する
- **MD030**: リストマーカーの後にスペースを1つ入れる
- **MD032**: リストの前後に空行を入れる

### 3. 空白・インデント（Whitespace）ルール
- **MD009**: 行末の空白を削除
- **MD010**: ハードタブの代わりにスペースを使用
- **MD012**: 連続する空行を避ける（最大1行まで）
- **MD047**: ファイル末尾に改行文字を1つ付ける

### 4. コードブロック（Code）ルール
- **MD031**: コードブロックの前後に空行を入れる
- **MD040**: フェンスコードブロックには言語を指定
- **MD046**: コードブロックスタイルを統一（フェンス形式推奨）
- **MD048**: コードフェンススタイルを統一（```を使用）

### 5. リンク・画像（Links & Images）ルール
- **MD011**: リンク構文の書き順を正しくする
- **MD034**: 裸のURLを避ける（リンク形式で記述）
- **MD039**: リンクテキスト内のスペースを避ける
- **MD042**: 空のリンクを避ける
- **MD045**: 画像にalt属性を付ける
- **MD051**: リンクフラグメントを有効にする
- **MD052**: 参照リンクのラベルを定義する

### 6. 引用・強調（Quotes & Emphasis）ルール
- **MD027**: 引用符の後の複数スペースを避ける
- **MD028**: 引用ブロック内の空行を避ける
- **MD037**: 強調マーカー内のスペースを避ける
- **MD049**: 強調スタイルを統一（`*`を使用）
- **MD050**: 太字スタイルを統一（`**`を使用）

### 7. HTML・その他ルール
- **MD033**: インラインHTMLを避ける（必要な場合のみ使用）
- **MD036**: 見出しの代わりに強調を使わない
- **MD058**: テーブルの前後に空行を入れる

## 実践的なガイドライン

### ✅ 正しい書き方

```markdown
# メインタイトル

## セクション1

### サブセクション

本文の内容です。

- リストアイテム1
- リストアイテム2
  - ネストしたアイテム

1. 番号付きリスト1
2. 番号付きリスト2

```javascript:filename.js
console.log('Hello World');
```

[リンクテキスト](mdc:https:/example.com)

![画像の説明](mdc:path/to/image.png)

**太字テキスト**

*斜体テキスト*
```

### ❌ 避けるべき書き方

```markdown
#見出しの前にスペースなし
## セクション1 ###

###見出しレベルの飛ばし

リストの前に空行なし
- リストアイテム1
-  リストアイテム2（スペース不統一）
   - ネストのインデント不正

1. 番号付きリスト1
3. 番号の飛ばし

```
// 言語指定なし
console.log('Hello World');
```

https://example.com （裸のURL）

![](path/to/image.png) （alt属性なし）

** 太字の前後にスペース **

行末にスペース   
```

## 自動修正可能なルール

以下のルールは Ctrl+. (Cmd+.) またはFormat Documentで自動修正できます：

- MD004（リストスタイル統一）
- MD005（リストインデント）
- MD007（リストインデント）
- MD009（行末スペース削除）
- MD010（ハードタブ→スペース）
- MD011（リンク構文修正）
- MD012（複数空行削除）
- MD018（見出しスペース追加）
- MD019（見出し複数スペース削除）
- MD022（見出し前後空行）
- MD030（リストマーカースペース）
- MD031（コードブロック前後空行）
- MD032（リスト前後空行）
- MD047（ファイル末尾改行）
- MD049（強調スタイル統一）
- MD050（太字スタイル統一）

## Zenn記事での特別な考慮事項

### フロントマター
Zenn記事のYAMLフロントマターはmarkdownlintの対象外ですが、一貫性を保つため：

```yaml
---
title: "記事タイトル"
emoji: "🐙"
type: "tech"
topics: ["Flutter", "Dart"]
published: false
---
```

### コードブロック（Zenn専用記法）
Zennのファイル名付きコードブロックも適切に使用：

```dart:main.dart
void main() {
  print('Hello Zenn!');
}
```

### 画像パス
Zennの画像パスも適切に記述：

```markdown
![説明文](mdc:images/filename.png)
```

## エラー修正のワークフロー

1. **VS Codeの警告確認**: 緑の波線でmarkdownlintエラーを確認
2. **自動修正**: Ctrl+. (Cmd+.) で修正可能なものは自動修正
3. **手動修正**: 自動修正できないものは手動で修正
4. **全体チェック**: Ctrl+Shift+M でエラー一覧を確認
5. **Format Document**: ファイル全体のフォーマットを実行

## 既存ファイルの一括修正手順

既存のMarkdownファイルをmarkdownlintに準拠させるための手順：

### 1. 環境セットアップ

```bash
# markdownlint-cli2をグローバルインストール
npm install -g markdownlint-cli2

# プロジェクト依存関係をインストール
npm install glob
```

### 2. 設定ファイルの準備

`.markdownlint.json`を作成してZenn記事に適した設定を適用：

```json
{
  "extends": "markdownlint/style/all",
  "MD013": {
    "line_length": 120,
    "headings": false,
    "tables": false,
    "code_blocks": false
  },
  "MD025": false,
  "MD033": {
    "allowed_elements": ["img", "br", "project", "String"]
  },
  "MD041": false,
  "MD036": false,
  "MD051": false,
  "ignores": [
    "node_modules/**/*"
  ]
}
```

### 3. 自動修正スクリプト実行

```bash
# 自動修正スクリプトを実行
node scripts/fix_markdown.js
```

このスクリプトは以下を自動修正します：

- **MD040**: コードブロックの言語指定（内容から推測）
- **MD045**: 画像のalt属性追加（ファイル名を使用）
- **MD029**: 順序付きリストの番号連続性
- **MD031**: コードブロック前後の空行

### 4. エラーチェックと手動修正

```bash
# 残りのエラーをチェック
markdownlint-cli2 "README.md" "articles/*.md" ".cursor/*.md"

# package.jsonにスクリプトを追加する場合
npm run lint:md
```

手動修正が必要な主なエラー：

- **MD001**: 見出しレベルの段階的増加
- **MD013**: 行長制限（120文字）
- **MD053**: 未使用のリンク参照定義

### 5. 結果確認

修正前：205個のエラー → 修正後：51個のエラー（75%削減）

自動修正により以下が解決：

- コードブロックの言語指定不足
- 画像のalt属性不足
- 裸のURL
- 連続する空行
- リスト前後の空行不足

## package.jsonへの追加設定

```json
{
  "scripts": {
    "lint:md": "markdownlint-cli2 \"README.md\" \"articles/*.md\" \".cursor/*.md\"",
    "lint:md:fix": "node scripts/fix_markdown.js && npm run lint:md"
  }
}
```

## チェックリスト

markdownlint準拠の記事作成時は以下を確認：

- [ ] 見出しが段階的（H1→H2→H3）
- [ ] 見出しの前後に空行
- [ ] リストの前後に空行
- [ ] コードブロックに言語指定
- [ ] 行末スペースなし
- [ ] ファイル末尾に改行
- [ ] 裸のURLなし
- [ ] 画像にalt属性
- [ ] 連続空行なし
- [ ] リストスタイル統一

このルールに従って、markdownlintに完全準拠したMarkdownファイルを作成してください。
